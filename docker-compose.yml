version: "3.7"
services:
  redis:
    image: redis:7.0.5-alpine
    container_name: redis-rerver
    ports:
      - $REDIS_PORT:$REDIS_PORT
    command: redis-server /etc/redis/redis.conf
    volumes:
      - ./redis-without-tls.conf:/etc/redis/redis.conf
      - ./redis-users.acl:/etc/redis/redis-users.acl
#      - ./cert/redis-cert.crt:/etc/redis/redis-cert.crt
#      - ./cert/redis-key.key:/etc/redis/redis-key.key
#      - ./cert/entrust_2048_ca.cer:/etc/redis/entrust_2048_ca.cer
  nginx:
    container_name: nginx-rerver
    build:
      context: .
      dockerfile: .docker/nginx/Dockerfile
      args:
        PORT: ${API_PORT}
        HOST: ${API_HOST}
    env_file: .env
    depends_on:
      - api
    ports:
      - $API_PORT:$API_PORT
  api:
    build:
      context: .
      dockerfile: .docker/api/Dockerfile
    command: npm run start:prod
    expose:
      - $API_PORT
  microservice:
    container_name: cron-microservice
    build:
      context: .
      dockerfile: .docker/microservice/Dockerfile
    command: npm run start:microservice:prod
    env_file: .env
    ports:
      - $MICROSERVICE_PORT:$MICROSERVICE_PORT
    depends_on:
      - redis
